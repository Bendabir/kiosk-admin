@import '~@angular/material/theming';
@import 'mixins';

.mat-card {
    display:flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    z-index: 1000;
}

.mat-card-header {
    flex-shrink: 0;
}

.mat-card-content{
    flex-grow: 1;
    overflow: hidden;
}

.mat-card-content p {
    text-align: justify;
    overflow-y: auto;
    max-height: 100%;
}

@include screen(xs) {
    .mat-card-content p {
        max-height: 75px;
    }
}

.mat-card-content div.details {
    margin-bottom: 16px;
}

.mat-card-content div.details span.info {
    text-align: center;
}

.mat-card-content div.details span.dash:hover {
    cursor: default;
}

.mat-slide-toggle {
    padding-top: 8px;
    padding-left: 8px;
}


.mat-icon.running-status {
    color: mat-color($mat-green, 500);
}

$image-height: 45%;

.mat-card-image {
    // Couldn't find a way to keep the 16:9 ratio
    // as the card size is dynamic
    height: $image-height;
}

:host(.deleted) {
    display: none;
}

// Try to position the hover properly but that's a hack
.hover-actions {
    $mat-card-padding: 16px - 2 * 1px;

    background: rgba(0, 0, 0, 0.25);
    position: absolute;
    top: 90px - $mat-card-padding;
    left: 0;
    width: 100%;
    height: calc(#{$image-height} - #{$mat-card-padding});
    color: white;

    display: flex;
    align-items: center;

    $transition-duration: 450ms;
    opacity: 0;
    -webkit-transition: opacity $transition-duration ease-in-out;
    -moz-transition: opacity $transition-duration ease-in-out;
    -ms-transition: opacity $transition-duration ease-in-out;
    -o-transition: opacity $transition-duration ease-in-out;
    transition: opacity $transition-duration ease-in-out;

    &:hover {
        opacity: 1;
    }

    .actions-wrapper {
        width: 100%;
        text-align: center;

        .mat-icon-button:nth-child(2) {
            $margin: 16px * 2;

            margin-left: $margin;
            margin-right: $margin;
        }

        .mat-icon-button {
            transform: scale(2);
        }
    }
}
